function Perturbed_eom
% Calculates the perturbed equations of motion due to J2
clc, close all, clear all
hours = 3600;
days = 24*hours;
deg = pi/180;
% Define constants
global mu
mu = 398600;
RE = 6370;
J2 = 0.00108;
a0 = 26600;
e0 = 0.74;
i0 = 1.10654; %rad
w0 = 5*deg; %rad
RA0 = 90*deg; %rad
M0 = 10*deg; %rad
% Solve for true anomaly given mean anomaly and eccentricity
EA0 = CalcEA(M0,e0,10^-8);
TA0 = 2*atan(sqrt((1+e0)/(1-e0))*tan(EA0/2));
h0 = sqrt(mu*a0*(1-e0^2));
T0 = 2*pi*sqrt(a0^3/mu);
t0 = 0;
tf = 100*days;
coe0 = [h0 e0 RA0 i0 w0 TA0];
% Initial state vector from orbital elements
[R0 V0] = sv_from_coe(coe0, mu);
r0 = norm(R0);
v0 = norm(V0);
del_t = T0/100;
options = odeset('maxstep', del_t);
% Encke Integration
t = t0; %Initialize the time scalar
tsave = t0; %Initialize the vector of solution times
y = [R0 V0]; %Initialize the state vector
del_y0 = zeros(6,1);
t = t + del_t;
while t <= tf + del_t/2
    [dum,z] = ode45(@rates, [t0 t], del_y0, options);
    [Rosc,Vosc] = rv_from_r0v0(R0, V0, t-t0);
    R0 = Rosc + z(end,1:3);
    V0 = Vosc + z(end,4:6);
    t0 = t;
    tsave = [tsave;t];
    y = [y; [R0 V0]];
    t = t + del_t;
    del_y0 = zeros(6,1);
end
t = tsave;
% Get orbital elements at each time from state vector
n_times = length(t);
for j = 1:n_times
    R = [y(j,1:3)];
    V = [y(j,4:6)];
    r(j) = norm(R);
    v(j) = norm(V);
    coe = coe_from_sv(R,V, mu);
    h(j) = coe(1);
    e(j) = coe(2);
    RA(j) = coe(3);
    i(j) = coe(4);
    w(j) = coe(5);
    TA(j) = coe(6);
end

% Plot results
figure(1)
subplot(2,1,1)
plot(t/86400,(RA - RA0)/deg)
title('Variation of Right Ascension')
xlabel('days')
ylabel('{\it\Delta\Omega} (deg)')
grid on
grid minor
axis tight

subplot(2,1,2)
plot(t/86400,(w - w0)/deg)
title('Variation of Argument of Perigee')
xlabel('days')
ylabel('{\it\Delta\omega} (deg)')
grid on
grid minor
axis tight

figure(2)
subplot(3,1,1)
plot(t/86400,h - h0)
title('Variation of Angular Momentum')
xlabel('days')
ylabel('{\it\Deltah} (km^2/s)')
grid on
grid minor
axis tight

subplot(3,1,2)
plot(t/86400,e - e0)
title('Variation of Eccentricity')
xlabel('days')
ylabel('\it\Deltae')
grid on
grid minor
axis tight

subplot(3,1,3)
plot(t/86400,(i - i0)/deg)
title('Variation of Inclination')
xlabel('days')
ylabel('{\it\Deltai} (deg)')
grid on
grid minor
axis tight


function dfdt = rates(t,f)
% Calculates the time rates of Encke's deviation in position and velocity
del_r = f(1:3)'; %Position deviation
del_v = f(4:6)'; %Velocity deviation
% Compute state vector on osculating orbit at time t
[Rosc,Vosc] = rv_from_r0v0(R0, V0, t-t0);
% Calculate components of the state vector
Rpp = Rosc + del_r;
Vpp = Vosc + del_v;
rosc = norm(Rosc);
rpp = norm(Rpp);
% Compute J2 perturbing acceleration
xx = Rpp(1); yy = Rpp(2); zz = Rpp(3);
fac = 3/2*J2*(mu/rpp^2)*(RE/rpp)^2;
ap = -fac*[(1 - 5*(zz/rpp)^2)*(xx/rpp); (1 - 5*(zz/rpp)^2)*(yy/rpp); (3 - 5*(zz/rpp)^2)*(zz/rpp)];
% Compute total perturbing acceleration
F = 1 - (rosc/rpp)^3;
del_a = -mu/rosc^3*(del_r - F*Rpp) + ap';
dfdt = [del_v(1) del_v(2) del_v(3) del_a(1) del_a(2) del_a(3)]';
dfdt = [del_v del_a]';
end
end
